name: e2e

on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  kubernetes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create a kubernetes cluster
        uses: debianmaster/actions-k3s@master
        with:
          version: 'latest'

      - name: Start the testpv app, which will write to a new PersistentVolume (PV)
        run: |
          kubectl apply -k .github/testpv
          echo "Waiting for the app to be ready..."
          while ! kubectl wait --timeout=5m --for=condition=ready pod -l app=testpv -n testpv; do
            sleep 1 # Wait for the pod to exist if wait fails
          done

      - name: Force a backup of the PV now
        run: |
          kubectl create job --from=cronjob/k8s-simple-backup-cron-job -n testpv k8s-simple-backup-job
          kubectl wait --timeout=5m --for=condition=complete -n testpv job/k8s-simple-backup-job
          kubectl logs -f --all-containers=true -n testpv job/k8s-simple-backup-job | tee logs.txt
          saved_snapshot=$(grep "^Archive name: " logs.txt | sed -E 's/Archive name: //g' | head -n 1)
          if [ -z "$saved_snapshot" ]; then
            echo "ERROR: No snapshot was found in the logs:"
            cat logs.txt
            exit 1
          fi
          rm logs.txt && echo "saved_snapshot=$saved_snapshot" | tee /dev/stderr >> $GITHUB_ENV
          kubectl delete job -n testpv k8s-simple-backup-job

      - name: Let the app run for a bit and print the logs
        run: |
          sleep 10
          kubectl logs -n testpv -l app=testpv --tail 100 | tee future_logs.txt

      - name: Force a restore of the PV now (to the backup we just made)
        run: |
          kubectl create job -n testpv --from=cronjob/k8s-simple-backup-cron-job k8s-simple-backup-job-restore --dry-run=client -o "json" \
            | jq ".spec.template.spec.initContainers[1].env += [{ \"name\": \"EXTRACT_TO\", value:\"$saved_snapshot\" }]" \
            | kubectl apply -f -
          kubectl wait --timeout=5m --for=condition=complete -n testpv job/k8s-simple-backup-job-restore
          kubectl logs -f --all-containers=true -n testpv job/k8s-simple-backup-job-restore
          kubectl delete job -n testpv k8s-simple-backup-job-restore

      - name: Let the app run for a bit and print the logs (should have gone back to the past!)
        run: |
          sleep 10
          kubectl logs -n testpv -l app=testpv --tail 100 | tee past_logs.txt
          # Ensure that the past logs partially match the future logs
          grep -q -f future_logs.txt past_logs.txt



